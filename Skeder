local UILibrary = {}
UILibrary.__index = UILibrary

-- Helper function to create a UI Corner (Rounded edges)
local function addUICorner(parent, radius)
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, radius)
    uiCorner.Parent = parent
    return uiCorner
end

-- Helper function to add a UI stroke (Border effect)
local function addUIStroke(parent, color, thickness)
    local uiStroke = Instance.new("UIStroke")
    uiStroke.Color = color
    uiStroke.Thickness = thickness
    uiStroke.Parent = parent
    return uiStroke
end

-- Function to make a GUI draggable
local function makeDraggable(frame, handle)
    handle = handle or frame
    local dragging, dragInput, startPos, dragStart

    -- Updates the frame position
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update(input)
        end
    end)
end

-- Function to create a new window (ScreenGui)
function UILibrary:NewWindow(title)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create the window frame
    local window = Instance.new("Frame")
    window.Size = UDim2.new(0, 400, 0, 300)
    window.Position = UDim2.new(0.5, -200, 0.5, -150)
    window.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    window.BorderSizePixel = 0
    window.Parent = screenGui

    -- Add rounded corners and UI stroke
    addUICorner(window, 10)
    addUIStroke(window, Color3.fromRGB(80, 80, 80), 2)

    -- Title bar
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = window
    addUICorner(titleBar, 10)

    -- Title label
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 20
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.BackgroundTransparency = 1
    titleLabel.Parent = titleBar

    -- Make the window draggable
    makeDraggable(window, titleBar)

    return window
end

function UILibrary:NewSection(window, sectionName)
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -20, 0, 200)
    scrollFrame.Position = UDim2.new(0, 10, 0, 50)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Dynamically updated
    scrollFrame.ScrollBarThickness = 6
    scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(80, 80, 80)
    scrollFrame.Parent = window
    addUICorner(scrollFrame, 8)
    addUIStroke(scrollFrame, Color3.fromRGB(90, 90, 90), 1)

    -- Section label
    local sectionLabel = Instance.new("TextLabel")
    sectionLabel.Size = UDim2.new(1, 0, 0, 30)
    sectionLabel.Text = sectionName
    sectionLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    sectionLabel.TextSize = 16
    sectionLabel.Font = Enum.Font.Gotham
    sectionLabel.BackgroundTransparency = 1
    sectionLabel.Parent = scrollFrame

    -- UI List Layout to organize children
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 10)  -- Adjust padding between elements
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = scrollFrame

    -- Automatically update CanvasSize based on children
    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
    end)

    return scrollFrame
end

function UILibrary:CreateButton(section, buttonText, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 40)  -- Set width to fill the section and height to 40
    button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    button.Text = buttonText
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 16
    button.Font = Enum.Font.Gotham
    button.Parent = section
    addUICorner(button, 8)

    -- Add hover effects
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    end)
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    end)

    -- Add click sound
    local clickSound = Instance.new("Sound")
    clickSound.SoundId = "rbxassetid://876939830" -- Click sound asset
    clickSound.Volume = 1.5
    clickSound.Parent = button

    -- Button click event
    button.MouseButton1Click:Connect(function()
        clickSound:Play() -- Play the sound
        callback() -- Call the provided function
    end)
end

function UILibrary:CreateDropdown(section, labelText, options, callback)
    local dropdown = Instance.new("Frame")
    dropdown.Size = UDim2.new(1, 0, 0, 40)  -- Full width, fixed height
    dropdown.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    dropdown.Parent = section
    addUICorner(dropdown, 8)

    -- Dropdown label
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -40, 1, 0)  -- Make the label fill the space minus the dropdown button
    label.Position = UDim2.new(0, 5, 0, 0)  -- Position the label
    label.Text = labelText
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 16
    label.Font = Enum.Font.Gotham
    label.BackgroundTransparency = 1
    label.TextWrapped = true
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = dropdown

    -- Dropdown button to toggle options
    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Size = UDim2.new(0, 30, 0, 30)
    dropdownButton.Position = UDim2.new(1, -35, 0, 5)  -- Position the button to the right
    dropdownButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    dropdownButton.Text = "▼"
    dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownButton.TextSize = 20
    dropdownButton.Font = Enum.Font.Gotham
    dropdownButton.Parent = dropdown

    -- Click sound for dropdown button
    local clickSound = Instance.new("Sound")
    clickSound.SoundId = "rbxassetid://876939830"  -- Your click sound asset ID
    clickSound.Volume = 1.5
    clickSound.Parent = dropdownButton

    -- Create the dropdown options container (scrollable)
    local optionsFrame = Instance.new("ScrollingFrame")
    optionsFrame.Size = UDim2.new(1, 0, 0, 0)  -- Initially no height
    optionsFrame.Position = UDim2.new(0, 0, 0, 40)
    optionsFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    optionsFrame.Visible = false  -- Initially hidden
    optionsFrame.Parent = section
    addUICorner(optionsFrame, 8)
    addUIStroke(optionsFrame, Color3.fromRGB(90, 90, 90), 1)
    optionsFrame.ScrollBarThickness = 6  -- Custom scrollbar thickness
    optionsFrame.CanvasSize = UDim2.new(0, 0, 0, 0)  -- Will be dynamically updated

    -- List layout for options (will auto adjust size of the options)
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 5)  -- Optional padding between options
    layout.Parent = optionsFrame

    -- Add option buttons dynamically
    for _, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Size = UDim2.new(1, 0, 0, 40)  -- Make the option buttons fill the entire width
        optionButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        optionButton.Text = option
        optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        optionButton.TextSize = 16
        optionButton.Font = Enum.Font.Gotham
        optionButton.Parent = optionsFrame
        addUICorner(optionButton, 8)

        -- Option click event
        optionButton.MouseButton1Click:Connect(function()
            callback(option)  -- Call the callback with the selected option
            optionsFrame.Visible = false  -- Hide options after selection
        end)
    end

    -- Adjust the canvas size of the scrolling frame based on the options
    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        optionsFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 5)  -- Add some padding
    end)

    -- Toggle the visibility of options when the dropdown button is clicked
    dropdownButton.MouseButton1Click:Connect(function()
        optionsFrame.Visible = not optionsFrame.Visible
        dropdownButton.Text = optionsFrame.Visible and "▲" or "▼"  -- Change the button text
        clickSound:Play() -- Play the click sound when toggled
    end)
end

return UILibrary
