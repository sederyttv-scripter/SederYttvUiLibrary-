local UILibrary = {}
UILibrary.__index = UILibrary

-- Helper function to create a UI Corner (Rounded edges)
local function addUICorner(parent, radius)
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, radius)
    uiCorner.Parent = parent
    return uiCorner
end

-- Helper function to add a UI stroke (Border effect)
local function addUIStroke(parent, color, thickness)
    local uiStroke = Instance.new("UIStroke")
    uiStroke.Color = color
    uiStroke.Thickness = thickness
    uiStroke.Parent = parent
    return uiStroke
end

-- Function to make a GUI draggable
local function makeDraggable(frame, handle)
    handle = handle or frame
    local dragging, dragInput, startPos, dragStart

    -- Updates the frame position
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update(input)
        end
    end)
end

-- Function to create a new window (ScreenGui)
function UILibrary:NewWindow(title)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create the window frame
    local window = Instance.new("Frame")
    window.Size = UDim2.new(0, 400, 0, 300)
    window.Position = UDim2.new(0.5, -200, 0.5, -150)
    window.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    window.BorderSizePixel = 0
    window.Parent = screenGui

    -- Add rounded corners and UI stroke
    addUICorner(window, 10)
    addUIStroke(window, Color3.fromRGB(80, 80, 80), 2)

    -- Title bar
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = window
    addUICorner(titleBar, 10)

    -- Title label
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 20
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.BackgroundTransparency = 1
    titleLabel.Parent = titleBar

    -- Make the window draggable
    makeDraggable(window, titleBar)

    return window
end

function UILibrary:NewSection(window, sectionName)
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -20, 0, 200)
    scrollFrame.Position = UDim2.new(0, 10, 0, 50)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Dynamically updated
    scrollFrame.ScrollBarThickness = 6
    scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(80, 80, 80)
    scrollFrame.Parent = window
    addUICorner(scrollFrame, 8)
    addUIStroke(scrollFrame, Color3.fromRGB(90, 90, 90), 1)

    -- Section label
    local sectionLabel = Instance.new("TextLabel")
    sectionLabel.Size = UDim2.new(1, 0, 0, 30)
    sectionLabel.Text = sectionName
    sectionLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    sectionLabel.TextSize = 16
    sectionLabel.Font = Enum.Font.Gotham
    sectionLabel.BackgroundTransparency = 1
    sectionLabel.Parent = scrollFrame

    -- UI List Layout to organize children
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 10)  -- Adjust padding between elements
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = scrollFrame

    -- Automatically update CanvasSize based on children
    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
    end)

    return scrollFrame
end

function UILibrary:CreateButton(section, buttonText, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 40)  -- Set width to fill the section and height to 40
    button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    button.Text = buttonText
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 16
    button.Font = Enum.Font.Gotham
    button.Parent = section
    addUICorner(button, 8)

    -- Add hover effects
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    end)
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    end)

    -- Add click sound
    local clickSound = Instance.new("Sound")
    clickSound.SoundId = "rbxassetid://876939830" -- Click sound asset
    clickSound.Volume = 1.5
    clickSound.Parent = button

    -- Button click event
    button.MouseButton1Click:Connect(function()
        clickSound:Play() -- Play the sound
        callback() -- Call the provided function
    end)
end

function UILibrary:CreateTextbox(section, placeholderText, callback)
    local textbox = Instance.new("TextBox")
    textbox.Size = UDim2.new(1, 0, 0, 40)  -- Replace this line to make it fit the full width
    textbox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    textbox.PlaceholderText = placeholderText
    textbox.PlaceholderColor3 = Color3.fromRGB(180, 180, 180)
    textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textbox.TextSize = 16
    textbox.Font = Enum.Font.Gotham
    textbox.Parent = section
    addUICorner(textbox, 8)

    -- Textbox submit event
    textbox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            callback(textbox.Text)
        end
    end)
end

function UILibrary:CreateToggle(section, labelText, callback)
    local toggle = Instance.new("Frame")
    toggle.Size = UDim2.new(1, 0, 0, 40)  -- Adjust width to 100% of parent
    toggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    toggle.Parent = section
    addUICorner(toggle, 8)

    -- Checkbox
    local checkbox = Instance.new("TextButton")
    checkbox.Size = UDim2.new(0, 30, 0, 30)  -- Keep the size of the checkbox small
    checkbox.Position = UDim2.new(0, 5, 0, 5)  -- Position it at the left side
    checkbox.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    checkbox.Text = ""
    checkbox.Parent = toggle
    addUICorner(checkbox, 6)

    -- Label
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -40, 1, 0)  -- Adjust size to fit text and checkbox
    label.Position = UDim2.new(0, 40, 0, 0)
    label.Text = labelText
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 16
    label.Font = Enum.Font.Gotham
    label.BackgroundTransparency = 1
    label.Parent = toggle

    -- Toggle the checkbox
    local isChecked = false
    checkbox.MouseButton1Click:Connect(function()
        isChecked = not isChecked
        checkbox.BackgroundColor3 = isChecked and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(100, 100, 100)
        callback(isChecked)  -- Pass the state to the callback
    end)
end

-- Function to create Tabs (Added code)
function UILibrary:AddTabs(window, tabNames)
    local tabContainer = Instance.new("Frame")
    tabContainer.Size = UDim2.new(1, 0, 0, 50)
    tabContainer.Position = UDim2.new(0, 0, 0, 40) -- Position below the title bar
    tabContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    tabContainer.Parent = window
    addUICorner(tabContainer, 8)

    -- Tab buttons
    local tabButtons = {}
    local activeTabIndex = 1  -- Default active tab
    local tabContentFrame = Instance.new("Frame")
    tabContentFrame.Size = UDim2.new(1, 0, 1, -90) -- Fill remaining space
    tabContentFrame.Position = UDim2.new(0, 0, 0, 90) -- Below the tab bar
    tabContentFrame.BackgroundTransparency = 1
    tabContentFrame.Parent = window

    -- Create the content for each tab
    local tabContents = {}
    for i, tabName in ipairs(tabNames) do
        -- Create a tab button
        local tabButton = Instance.new("TextButton")
        tabButton.Size = UDim2.new(1/#tabNames, 0, 1, 0)
        tabButton.Position = UDim2.new((i-1)/#tabNames, 0, 0, 0)
        tabButton.Text = tabName
        tabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        tabButton.Font = Enum.Font.GothamBold
        tabButton.TextSize = 16
        tabButton.Parent = tabContainer
        addUICorner(tabButton, 8)

        -- Create the content for the tab
        local tabContent = Instance.new("Frame")
        tabContent.Size = UDim2.new(1, 0, 1, 0)
        tabContent.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        tabContent.Visible = (i == activeTabIndex)
        tabContent.Parent = tabContentFrame
        addUICorner(tabContent, 8)
        
        tabContents[i] = tabContent

        -- Switch to this tab when clicked
        tabButton.MouseButton1Click:Connect(function()
            for j, content in ipairs(tabContents) do
                content.Visible = false
            end
            tabContents[i].Visible = true
            activeTabIndex = i
        end)
    end
end

return UILibrary
