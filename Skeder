local UILibrary = {}
UILibrary.__index = UILibrary

-- Create the Window function with support for tabs
function UILibrary:CreateWindow(title, size)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ExecutorUI"
    ScreenGui.Parent = game:GetService("CoreGui")

    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.Size = UDim2.new(0, size.X, 0, size.Y)
    MainFrame.Position = UDim2.new(0.5, -size.X / 2, 0.5, -size.Y / 2)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0

    local TitleBar = Instance.new("TextLabel")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = MainFrame
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TitleBar.Text = title
    TitleBar.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleBar.TextSize = 16

    local TabFrame = Instance.new("Frame")
    TabFrame.Name = "TabFrame"
    TabFrame.Parent = MainFrame
    TabFrame.Size = UDim2.new(1, 0, 1, -30)
    TabFrame.Position = UDim2.new(0, 0, 0, 30)
    TabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TabFrame.BorderSizePixel = 0

    local TabButtonsFrame = Instance.new("Frame")
    TabButtonsFrame.Name = "TabButtons"
    TabButtonsFrame.Parent = MainFrame
    TabButtonsFrame.Size = UDim2.new(1, 0, 0, 30)
    TabButtonsFrame.Position = UDim2.new(0, 0, 0, 30)
    TabButtonsFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    
    local Tabs = {}

    function self:AddTab(tabName)
        local TabButton = Instance.new("TextButton")
        TabButton.Name = tabName
        TabButton.Parent = TabButtonsFrame
        TabButton.Size = UDim2.new(0, 100, 0, 30)
        TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        TabButton.Text = tabName
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.TextSize = 14
        TabButton.AutoButtonColor = false
        
        local TabContent = Instance.new("Frame")
        TabContent.Name = tabName.."Content"
        TabContent.Parent = TabFrame
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.BackgroundTransparency = 1
        TabContent.Visible = false
        
        -- Store tab reference
        Tabs[tabName] = TabContent
        
        TabButton.MouseButton1Click:Connect(function()
            -- Hide all tabs
            for _, tab in pairs(Tabs) do
                tab.Visible = false
            end
            
            -- Show selected tab
            TabContent.Visible = true
        end)
        
        return TabContent
    end

    -- Default tab shown
    if #Tabs == 0 then
        self:AddTab("Default")
    end

    return setmetatable({MainFrame = MainFrame, Components = {}, Tabs = Tabs}, UILibrary)
end

-- Add Label function (works inside tabs)
function UILibrary:AddLabel(text, tabName)
    local TabContent = self.Tabs[tabName]
    local Label = Instance.new("TextLabel")
    Label.Name = "Label"
    Label.Parent = TabContent
    Label.Size = UDim2.new(1, -10, 0, 20)
    Label.Position = UDim2.new(0, 5, 0, #self.Components * 25 + 35)
    Label.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Label.Text = text
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.TextSize = 14
    table.insert(self.Components, Label)
    return Label
end

-- Add Button function (works inside tabs)
function UILibrary:AddButton(text, tabName, callback)
    local TabContent = self.Tabs[tabName]
    local Button = Instance.new("TextButton")
    Button.Name = "Button"
    Button.Parent = TabContent
    Button.Size = UDim2.new(1, -10, 0, 30)
    Button.Position = UDim2.new(0, 5, 0, #self.Components * 35 + 35)
    Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Button.Text = text
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.TextSize = 14

    Button.MouseButton1Click:Connect(function()
        if callback then callback() end
    end)

    table.insert(self.Components, Button)
    return Button
end

-- Add Toggle function (works inside tabs)
function UILibrary:AddToggle(text, default, tabName, callback)
    local TabContent = self.Tabs[tabName]
    local Toggle = Instance.new("Frame")
    Toggle.Name = "Toggle"
    Toggle.Parent = TabContent
    Toggle.Size = UDim2.new(1, -10, 0, 30)
    Toggle.Position = UDim2.new(0, 5, 0, #self.Components * 35 + 35)
    Toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    local ToggleLabel = Instance.new("TextLabel")
    ToggleLabel.Name = "ToggleLabel"
    ToggleLabel.Parent = Toggle
    ToggleLabel.Size = UDim2.new(0.8, 0, 1, 0)
    ToggleLabel.Position = UDim2.new(0, 5, 0, 0)
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.Text = text
    ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleLabel.TextSize = 14

    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Name = "ToggleButton"
    ToggleButton.Parent = Toggle
    ToggleButton.Size = UDim2.new(0.2, -5, 0.8, 0)
    ToggleButton.Position = UDim2.new(0.8, 0, 0.1, 0)
    ToggleButton.BackgroundColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    ToggleButton.Text = ""

    local toggled = default
    ToggleButton.MouseButton1Click:Connect(function()
        toggled = not toggled
        ToggleButton.BackgroundColor3 = toggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        if callback then callback(toggled) end
    end)

    table.insert(self.Components, Toggle)
    return Toggle
end

return UILibrary
